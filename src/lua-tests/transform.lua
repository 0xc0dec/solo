local scene = sl.Scene.empty(sl.device)
local node = scene:createNode()
local node2 = scene:createNode()
local t = node:findComponent('Transform')
local t2 = node2:findComponent('Transform')
local cam = node:addComponent('Camera')

t:setParent(t2)
assert(t:parent() == t2)

assert(t2:child(0) == t)
assert(t2:childrenCount() == 1)

t2:clearChildren()

assert(t:worldScale())
assert(t:localScale())
assert(t:worldRotation())
assert(t:localRotation())
assert(t:worldPosition())
assert(t:localPosition())
assert(t:worldUp())
assert(t:localUp())
assert(t:worldDown())
assert(t:localDown())
assert(t:worldLeft())
assert(t:localLeft())
assert(t:worldRight())
assert(t:localRight())
assert(t:worldForward())
assert(t:localForward())
assert(t:worldBack())
assert(t:localBack())
assert(t:matrix())
assert(t:worldMatrix())
assert(t:worldViewMatrix(cam))
assert(t:worldViewProjMatrix(cam))
assert(t:invTransposedWorldMatrix())
assert(t:invTransposedWorldViewMatrix(cam))

t:translateLocal(sl.Vector3(1, 2, 3))
t:scaleLocal(sl.Vector3(1, 2, 3))
t:setLocalPosition(sl.Vector3(1, 2, 3))
t:setLocalScale(sl.Vector3(1, 2, 3))
t:rotate(sl.Quaternion(1, 2, 3, 4), sl.TransformSpace.Self)
t:rotateByAxisAngle(sl.Vector3(1, 2, 3), sl.Radians(12), sl.TransformSpace.Self)
t:setLocalRotation(sl.Quaternion(1, 2, 3, 4))
t:setLocalAxisAngleRotation(sl.Vector3(1, 2, 3), sl.Radians(12))
t:lookAt(sl.Vector3(1, 2, 3), sl.Vector3(0, 0, 0))
t:transformPoint(sl.Vector3(1, 2, 3))
t:transformDirection(sl.Vector3(1, 2, 3))