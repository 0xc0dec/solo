/*
The MIT License

Copyright (c) 2009 - 2015 Liam Devine

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
/**
	\file oolua_boilerplate.h
	\date Thu Apr 10 18:41:11 2014
	\details
	Configurable values as set when generating this file
	\li constructor_params 5 - Maximum amount of parameters for a constructor of a proxied type	(Default 5)
	\li lua_params 10 - Maximum amount of parameters for a call to a Lua function	(Default 10)
	\li cpp_params 8 - Maximum number of parameters a C++ function can have	(Default 8)
	\note Warning this file was generated, edits to the file will not persist if it is regenerated.
*/

#ifndef OOLUA_BOILERPLATE_H_
#	define OOLUA_BOILERPLATE_H_
/** \cond INTERNAL */

#	include "oolua_config.h"
#if defined __GNUC__ && defined __STRICT_ANSI__
/*shhhh about va args and c99*/
#	pragma GCC system_header
#endif

/*
 Functions which are proxied when parameters have traits allow for a direction
 for the type such that it needs pushing back to the lua stack
 param return macros
*/
#define OOLUA_BACK_INTERNAL_NUM(NUM) \
MSC_PUSH_DISABLE_CONDITIONAL_CONSTANT_OOLUA \
	if( P ## NUM ## _::out ) \
		OOLUA::INTERNAL::Proxy_stack_helper<P ## NUM ##_::traits, P ## NUM ##_::owner>::push(vm, p ## NUM); \
MSC_POP_COMPILER_WARNING_OOLUA
#define OOLUA_BACK_INTERNAL_0
#define OOLUA_BACK_INTERNAL_1 OOLUA_BACK_INTERNAL_NUM(1)
#define OOLUA_BACK_INTERNAL_2 OOLUA_BACK_INTERNAL_1  OOLUA_BACK_INTERNAL_NUM(2)
#define OOLUA_BACK_INTERNAL_3 OOLUA_BACK_INTERNAL_2  OOLUA_BACK_INTERNAL_NUM(3)
#define OOLUA_BACK_INTERNAL_4 OOLUA_BACK_INTERNAL_3  OOLUA_BACK_INTERNAL_NUM(4)
#define OOLUA_BACK_INTERNAL_5 OOLUA_BACK_INTERNAL_4  OOLUA_BACK_INTERNAL_NUM(5)
#define OOLUA_BACK_INTERNAL_6 OOLUA_BACK_INTERNAL_5  OOLUA_BACK_INTERNAL_NUM(6)
#define OOLUA_BACK_INTERNAL_7 OOLUA_BACK_INTERNAL_6  OOLUA_BACK_INTERNAL_NUM(7)
#define OOLUA_BACK_INTERNAL_8 OOLUA_BACK_INTERNAL_7  OOLUA_BACK_INTERNAL_NUM(8)

/*
Functions proxied using the following macro may have traits
 and therefore the types have the possiblity of not being on the stack
 it therefore uses a rolling parameter index to index the stack.
*/
#define OOLUA_INTERNAL_PARAM(NUM, PARAM) \
	typedef OOLUA::INTERNAL::param_type<PARAM > P ## NUM ##_; \
	P ## NUM ##_::pull_type p ## NUM; \
	MSC_PUSH_DISABLE_CONDITIONAL_CONSTANT_OOLUA \
	if( P ## NUM ##_::in ) \
		OOLUA::INTERNAL::Proxy_stack_helper<P ## NUM ##_::traits, P ## NUM ##_::owner>::get(rolling_param_index, vm, p ## NUM); \
	MSC_POP_COMPILER_WARNING_OOLUA

#define OOLUA_PARAMS_INTERNAL_0(StackIndex)
#define OOLUA_PARAMS_INTERNAL_1(StackIndex, PARAM1) int rolling_param_index = StackIndex; OOLUA_INTERNAL_PARAM(1, PARAM1)
#define OOLUA_PARAMS_INTERNAL_2(StackIndex, PARAM1, PARAM2) OOLUA_PARAMS_INTERNAL_1(StackIndex, PARAM1)  OOLUA_INTERNAL_PARAM(2, PARAM2)
#define OOLUA_PARAMS_INTERNAL_3(StackIndex, PARAM1, PARAM2, PARAM3) OOLUA_PARAMS_INTERNAL_2(StackIndex, PARAM1, PARAM2)  OOLUA_INTERNAL_PARAM(3, PARAM3)
#define OOLUA_PARAMS_INTERNAL_4(StackIndex, PARAM1, PARAM2, PARAM3, PARAM4) OOLUA_PARAMS_INTERNAL_3(StackIndex, PARAM1, PARAM2, PARAM3)  OOLUA_INTERNAL_PARAM(4, PARAM4)
#define OOLUA_PARAMS_INTERNAL_5(StackIndex, PARAM1, PARAM2, PARAM3, PARAM4, PARAM5) OOLUA_PARAMS_INTERNAL_4(StackIndex, PARAM1, PARAM2, PARAM3, PARAM4)  OOLUA_INTERNAL_PARAM(5, PARAM5)
#define OOLUA_PARAMS_INTERNAL_6(StackIndex, PARAM1, PARAM2, PARAM3, PARAM4, PARAM5, PARAM6) OOLUA_PARAMS_INTERNAL_5(StackIndex, PARAM1, PARAM2, PARAM3, PARAM4, PARAM5)  OOLUA_INTERNAL_PARAM(6, PARAM6)
#define OOLUA_PARAMS_INTERNAL_7(StackIndex, PARAM1, PARAM2, PARAM3, PARAM4, PARAM5, PARAM6, PARAM7) OOLUA_PARAMS_INTERNAL_6(StackIndex, PARAM1, PARAM2, PARAM3, PARAM4, PARAM5, PARAM6)  OOLUA_INTERNAL_PARAM(7, PARAM7)
#define OOLUA_PARAMS_INTERNAL_8(StackIndex, PARAM1, PARAM2, PARAM3, PARAM4, PARAM5, PARAM6, PARAM7, PARAM8) OOLUA_PARAMS_INTERNAL_7(StackIndex, PARAM1, PARAM2, PARAM3, PARAM4, PARAM5, PARAM6, PARAM7)  OOLUA_INTERNAL_PARAM(8, PARAM8)

/*
macros for when using default traits and deducing the function signature
for these type of proxied functions the parameters can not use traits and
therefore are all on the stack, these then only need an offset for the first
parameters.
*/
#define OOLUA_INTERNAL_DEFAULT_PARAM(NUM, OFFSET) \
	typedef OOLUA::INTERNAL::param_type<P ## NUM > P ## NUM ##_; \
	typename P ## NUM ##_::pull_type p ## NUM; \
	OOLUA::INTERNAL::Proxy_stack_helper<P ## NUM ##_, P ## NUM ##_::owner>::get(vm, NUM + OFFSET, p ## NUM);

#define OOLUA_PARAMS_DEFAULT_INTERNAL_0(OFFSET)
#define OOLUA_PARAMS_DEFAULT_INTERNAL_1(OFFSET) OOLUA_INTERNAL_DEFAULT_PARAM(1, OFFSET)
#define OOLUA_PARAMS_DEFAULT_INTERNAL_2(OFFSET) OOLUA_PARAMS_DEFAULT_INTERNAL_1(OFFSET)  OOLUA_INTERNAL_DEFAULT_PARAM(2, OFFSET)
#define OOLUA_PARAMS_DEFAULT_INTERNAL_3(OFFSET) OOLUA_PARAMS_DEFAULT_INTERNAL_2(OFFSET)  OOLUA_INTERNAL_DEFAULT_PARAM(3, OFFSET)
#define OOLUA_PARAMS_DEFAULT_INTERNAL_4(OFFSET) OOLUA_PARAMS_DEFAULT_INTERNAL_3(OFFSET)  OOLUA_INTERNAL_DEFAULT_PARAM(4, OFFSET)
#define OOLUA_PARAMS_DEFAULT_INTERNAL_5(OFFSET) OOLUA_PARAMS_DEFAULT_INTERNAL_4(OFFSET)  OOLUA_INTERNAL_DEFAULT_PARAM(5, OFFSET)
#define OOLUA_PARAMS_DEFAULT_INTERNAL_6(OFFSET) OOLUA_PARAMS_DEFAULT_INTERNAL_5(OFFSET)  OOLUA_INTERNAL_DEFAULT_PARAM(6, OFFSET)
#define OOLUA_PARAMS_DEFAULT_INTERNAL_7(OFFSET) OOLUA_PARAMS_DEFAULT_INTERNAL_6(OFFSET)  OOLUA_INTERNAL_DEFAULT_PARAM(7, OFFSET)
#define OOLUA_PARAMS_DEFAULT_INTERNAL_8(OFFSET) OOLUA_PARAMS_DEFAULT_INTERNAL_7(OFFSET)  OOLUA_INTERNAL_DEFAULT_PARAM(8, OFFSET)

#define OOLUA_FUNCTION_PARAMS_TYPES_NUM(NUM) P##NUM##_::type
#define OOLUA_FUNCTION_PARAMS_TYPES_0
#define OOLUA_FUNCTION_PARAMS_TYPES_1 OOLUA_FUNCTION_PARAMS_TYPES_NUM(1)
#define OOLUA_FUNCTION_PARAMS_TYPES_2 OOLUA_FUNCTION_PARAMS_TYPES_1 , OOLUA_FUNCTION_PARAMS_TYPES_NUM(2)
#define OOLUA_FUNCTION_PARAMS_TYPES_3 OOLUA_FUNCTION_PARAMS_TYPES_2 , OOLUA_FUNCTION_PARAMS_TYPES_NUM(3)
#define OOLUA_FUNCTION_PARAMS_TYPES_4 OOLUA_FUNCTION_PARAMS_TYPES_3 , OOLUA_FUNCTION_PARAMS_TYPES_NUM(4)
#define OOLUA_FUNCTION_PARAMS_TYPES_5 OOLUA_FUNCTION_PARAMS_TYPES_4 , OOLUA_FUNCTION_PARAMS_TYPES_NUM(5)
#define OOLUA_FUNCTION_PARAMS_TYPES_6 OOLUA_FUNCTION_PARAMS_TYPES_5 , OOLUA_FUNCTION_PARAMS_TYPES_NUM(6)
#define OOLUA_FUNCTION_PARAMS_TYPES_7 OOLUA_FUNCTION_PARAMS_TYPES_6 , OOLUA_FUNCTION_PARAMS_TYPES_NUM(7)
#define OOLUA_FUNCTION_PARAMS_TYPES_8 OOLUA_FUNCTION_PARAMS_TYPES_7 , OOLUA_FUNCTION_PARAMS_TYPES_NUM(8)

#define OOLUA_COMMA_SEPERATED_TYPES_NUM(NUM) P##NUM
#define OOLUA_COMMA_SEPERATED_TYPES_0
#define OOLUA_COMMA_SEPERATED_TYPES_1 OOLUA_COMMA_SEPERATED_TYPES_NUM(1)
#define OOLUA_COMMA_SEPERATED_TYPES_2 OOLUA_COMMA_SEPERATED_TYPES_1 , OOLUA_COMMA_SEPERATED_TYPES_NUM(2)
#define OOLUA_COMMA_SEPERATED_TYPES_3 OOLUA_COMMA_SEPERATED_TYPES_2 , OOLUA_COMMA_SEPERATED_TYPES_NUM(3)
#define OOLUA_COMMA_SEPERATED_TYPES_4 OOLUA_COMMA_SEPERATED_TYPES_3 , OOLUA_COMMA_SEPERATED_TYPES_NUM(4)
#define OOLUA_COMMA_SEPERATED_TYPES_5 OOLUA_COMMA_SEPERATED_TYPES_4 , OOLUA_COMMA_SEPERATED_TYPES_NUM(5)
#define OOLUA_COMMA_SEPERATED_TYPES_6 OOLUA_COMMA_SEPERATED_TYPES_5 , OOLUA_COMMA_SEPERATED_TYPES_NUM(6)
#define OOLUA_COMMA_SEPERATED_TYPES_7 OOLUA_COMMA_SEPERATED_TYPES_6 , OOLUA_COMMA_SEPERATED_TYPES_NUM(7)
#define OOLUA_COMMA_SEPERATED_TYPES_8 OOLUA_COMMA_SEPERATED_TYPES_7 , OOLUA_COMMA_SEPERATED_TYPES_NUM(8)

#define OOLUA_COMMA_PREFIXED_TYPENAMES_NUM(NUM), typename P##NUM
#define OOLUA_COMMA_PREFIXED_TYPENAMES_0
#define OOLUA_COMMA_PREFIXED_TYPENAMES_1 OOLUA_COMMA_PREFIXED_TYPENAMES_NUM(1)
#define OOLUA_COMMA_PREFIXED_TYPENAMES_2 OOLUA_COMMA_PREFIXED_TYPENAMES_1  OOLUA_COMMA_PREFIXED_TYPENAMES_NUM(2)
#define OOLUA_COMMA_PREFIXED_TYPENAMES_3 OOLUA_COMMA_PREFIXED_TYPENAMES_2  OOLUA_COMMA_PREFIXED_TYPENAMES_NUM(3)
#define OOLUA_COMMA_PREFIXED_TYPENAMES_4 OOLUA_COMMA_PREFIXED_TYPENAMES_3  OOLUA_COMMA_PREFIXED_TYPENAMES_NUM(4)
#define OOLUA_COMMA_PREFIXED_TYPENAMES_5 OOLUA_COMMA_PREFIXED_TYPENAMES_4  OOLUA_COMMA_PREFIXED_TYPENAMES_NUM(5)
#define OOLUA_COMMA_PREFIXED_TYPENAMES_6 OOLUA_COMMA_PREFIXED_TYPENAMES_5  OOLUA_COMMA_PREFIXED_TYPENAMES_NUM(6)
#define OOLUA_COMMA_PREFIXED_TYPENAMES_7 OOLUA_COMMA_PREFIXED_TYPENAMES_6  OOLUA_COMMA_PREFIXED_TYPENAMES_NUM(7)
#define OOLUA_COMMA_PREFIXED_TYPENAMES_8 OOLUA_COMMA_PREFIXED_TYPENAMES_7  OOLUA_COMMA_PREFIXED_TYPENAMES_NUM(8)
#define OOLUA_COMMA_PREFIXED_TYPENAMES_9 OOLUA_COMMA_PREFIXED_TYPENAMES_8  OOLUA_COMMA_PREFIXED_TYPENAMES_NUM(9)
#define OOLUA_COMMA_PREFIXED_TYPENAMES_10 OOLUA_COMMA_PREFIXED_TYPENAMES_9  OOLUA_COMMA_PREFIXED_TYPENAMES_NUM(10)

#define OOLUA_COMMA_PREFIXED_PARAM_TYPES_NUM(NUM), P##NUM##_
#define OOLUA_COMMA_PREFIXED_PARAM_TYPES_0
#define OOLUA_COMMA_PREFIXED_PARAM_TYPES_1 OOLUA_COMMA_PREFIXED_PARAM_TYPES_NUM(1)
#define OOLUA_COMMA_PREFIXED_PARAM_TYPES_2 OOLUA_COMMA_PREFIXED_PARAM_TYPES_1  OOLUA_COMMA_PREFIXED_PARAM_TYPES_NUM(2)
#define OOLUA_COMMA_PREFIXED_PARAM_TYPES_3 OOLUA_COMMA_PREFIXED_PARAM_TYPES_2  OOLUA_COMMA_PREFIXED_PARAM_TYPES_NUM(3)
#define OOLUA_COMMA_PREFIXED_PARAM_TYPES_4 OOLUA_COMMA_PREFIXED_PARAM_TYPES_3  OOLUA_COMMA_PREFIXED_PARAM_TYPES_NUM(4)
#define OOLUA_COMMA_PREFIXED_PARAM_TYPES_5 OOLUA_COMMA_PREFIXED_PARAM_TYPES_4  OOLUA_COMMA_PREFIXED_PARAM_TYPES_NUM(5)
#define OOLUA_COMMA_PREFIXED_PARAM_TYPES_6 OOLUA_COMMA_PREFIXED_PARAM_TYPES_5  OOLUA_COMMA_PREFIXED_PARAM_TYPES_NUM(6)
#define OOLUA_COMMA_PREFIXED_PARAM_TYPES_7 OOLUA_COMMA_PREFIXED_PARAM_TYPES_6  OOLUA_COMMA_PREFIXED_PARAM_TYPES_NUM(7)
#define OOLUA_COMMA_PREFIXED_PARAM_TYPES_8 OOLUA_COMMA_PREFIXED_PARAM_TYPES_7  OOLUA_COMMA_PREFIXED_PARAM_TYPES_NUM(8)

#define OOLUA_CALL_PARAMS_NUM(NUM) , p##NUM
#define OOLUA_CALL_PARAMS_0
#define OOLUA_CALL_PARAMS_1 OOLUA_CALL_PARAMS_NUM(1)
#define OOLUA_CALL_PARAMS_2 OOLUA_CALL_PARAMS_1  OOLUA_CALL_PARAMS_NUM(2)
#define OOLUA_CALL_PARAMS_3 OOLUA_CALL_PARAMS_2  OOLUA_CALL_PARAMS_NUM(3)
#define OOLUA_CALL_PARAMS_4 OOLUA_CALL_PARAMS_3  OOLUA_CALL_PARAMS_NUM(4)
#define OOLUA_CALL_PARAMS_5 OOLUA_CALL_PARAMS_4  OOLUA_CALL_PARAMS_NUM(5)
#define OOLUA_CALL_PARAMS_6 OOLUA_CALL_PARAMS_5  OOLUA_CALL_PARAMS_NUM(6)
#define OOLUA_CALL_PARAMS_7 OOLUA_CALL_PARAMS_6  OOLUA_CALL_PARAMS_NUM(7)
#define OOLUA_CALL_PARAMS_8 OOLUA_CALL_PARAMS_7  OOLUA_CALL_PARAMS_NUM(8)

#define OOLUA_CONVERTER_NUM(NUM) OOLUA::INTERNAL::Converter<typename P##NUM::pull_type, typename P##NUM::type> p##NUM##_(p##NUM);
#define OOLUA_CONVERTER_0
#define OOLUA_CONVERTER_1 OOLUA_CONVERTER_NUM(1)
#define OOLUA_CONVERTER_2 OOLUA_CONVERTER_1  OOLUA_CONVERTER_NUM(2)
#define OOLUA_CONVERTER_3 OOLUA_CONVERTER_2  OOLUA_CONVERTER_NUM(3)
#define OOLUA_CONVERTER_4 OOLUA_CONVERTER_3  OOLUA_CONVERTER_NUM(4)
#define OOLUA_CONVERTER_5 OOLUA_CONVERTER_4  OOLUA_CONVERTER_NUM(5)
#define OOLUA_CONVERTER_6 OOLUA_CONVERTER_5  OOLUA_CONVERTER_NUM(6)
#define OOLUA_CONVERTER_7 OOLUA_CONVERTER_6  OOLUA_CONVERTER_NUM(7)
#define OOLUA_CONVERTER_8 OOLUA_CONVERTER_7  OOLUA_CONVERTER_NUM(8)

#define OOLUA_CONVERTER_PARAMS_NUM(NUM) p##NUM##_
#define OOLUA_CONVERTER_PARAMS_0
#define OOLUA_CONVERTER_PARAMS_1 OOLUA_CONVERTER_PARAMS_NUM(1)
#define OOLUA_CONVERTER_PARAMS_2 OOLUA_CONVERTER_PARAMS_1 , OOLUA_CONVERTER_PARAMS_NUM(2)
#define OOLUA_CONVERTER_PARAMS_3 OOLUA_CONVERTER_PARAMS_2 , OOLUA_CONVERTER_PARAMS_NUM(3)
#define OOLUA_CONVERTER_PARAMS_4 OOLUA_CONVERTER_PARAMS_3 , OOLUA_CONVERTER_PARAMS_NUM(4)
#define OOLUA_CONVERTER_PARAMS_5 OOLUA_CONVERTER_PARAMS_4 , OOLUA_CONVERTER_PARAMS_NUM(5)
#define OOLUA_CONVERTER_PARAMS_6 OOLUA_CONVERTER_PARAMS_5 , OOLUA_CONVERTER_PARAMS_NUM(6)
#define OOLUA_CONVERTER_PARAMS_7 OOLUA_CONVERTER_PARAMS_6 , OOLUA_CONVERTER_PARAMS_NUM(7)
#define OOLUA_CONVERTER_PARAMS_8 OOLUA_CONVERTER_PARAMS_7 , OOLUA_CONVERTER_PARAMS_NUM(8)

#define OOLUA_PULL_TYPE_PARAMS_NUM(NUM) , typename P##NUM ::pull_type& p##NUM
#define OOLUA_PULL_TYPE_PARAMS_0
#define OOLUA_PULL_TYPE_PARAMS_1 OOLUA_PULL_TYPE_PARAMS_NUM(1)
#define OOLUA_PULL_TYPE_PARAMS_2 OOLUA_PULL_TYPE_PARAMS_1  OOLUA_PULL_TYPE_PARAMS_NUM(2)
#define OOLUA_PULL_TYPE_PARAMS_3 OOLUA_PULL_TYPE_PARAMS_2  OOLUA_PULL_TYPE_PARAMS_NUM(3)
#define OOLUA_PULL_TYPE_PARAMS_4 OOLUA_PULL_TYPE_PARAMS_3  OOLUA_PULL_TYPE_PARAMS_NUM(4)
#define OOLUA_PULL_TYPE_PARAMS_5 OOLUA_PULL_TYPE_PARAMS_4  OOLUA_PULL_TYPE_PARAMS_NUM(5)
#define OOLUA_PULL_TYPE_PARAMS_6 OOLUA_PULL_TYPE_PARAMS_5  OOLUA_PULL_TYPE_PARAMS_NUM(6)
#define OOLUA_PULL_TYPE_PARAMS_7 OOLUA_PULL_TYPE_PARAMS_6  OOLUA_PULL_TYPE_PARAMS_NUM(7)
#define OOLUA_PULL_TYPE_PARAMS_8 OOLUA_PULL_TYPE_PARAMS_7  OOLUA_PULL_TYPE_PARAMS_NUM(8)

#define OOLUA_CONSTRUCTOR_PARAM_NUM(NUM) \
	typename P##NUM::pull_type p##NUM; \
	Proxy_stack_helper<typename P##NUM::traits, P##NUM::owner>::get(index, vm, p##NUM); \
	Converter<typename P##NUM::pull_type, typename P##NUM::type> p##NUM##_(p##NUM);
#define OOLUA_CONSTRUCTOR_PARAM_1 OOLUA_CONSTRUCTOR_PARAM_NUM(1)
#define OOLUA_CONSTRUCTOR_PARAM_2 OOLUA_CONSTRUCTOR_PARAM_1  OOLUA_CONSTRUCTOR_PARAM_NUM(2)
#define OOLUA_CONSTRUCTOR_PARAM_3 OOLUA_CONSTRUCTOR_PARAM_2  OOLUA_CONSTRUCTOR_PARAM_NUM(3)
#define OOLUA_CONSTRUCTOR_PARAM_4 OOLUA_CONSTRUCTOR_PARAM_3  OOLUA_CONSTRUCTOR_PARAM_NUM(4)
#define OOLUA_CONSTRUCTOR_PARAM_5 OOLUA_CONSTRUCTOR_PARAM_4  OOLUA_CONSTRUCTOR_PARAM_NUM(5)

#define OOLUA_CONSTRUCTOR_PARAM_IS_OF_TYPE_NUM(NUM) Param_helper<P##NUM >::param_is_of_type(vm, index)
#define OOLUA_CONSTRUCTOR_PARAM_IS_OF_TYPE_1 OOLUA_CONSTRUCTOR_PARAM_IS_OF_TYPE_NUM(1)
#define OOLUA_CONSTRUCTOR_PARAM_IS_OF_TYPE_2 OOLUA_CONSTRUCTOR_PARAM_IS_OF_TYPE_1 && OOLUA_CONSTRUCTOR_PARAM_IS_OF_TYPE_NUM(2)
#define OOLUA_CONSTRUCTOR_PARAM_IS_OF_TYPE_3 OOLUA_CONSTRUCTOR_PARAM_IS_OF_TYPE_2 && OOLUA_CONSTRUCTOR_PARAM_IS_OF_TYPE_NUM(3)
#define OOLUA_CONSTRUCTOR_PARAM_IS_OF_TYPE_4 OOLUA_CONSTRUCTOR_PARAM_IS_OF_TYPE_3 && OOLUA_CONSTRUCTOR_PARAM_IS_OF_TYPE_NUM(4)
#define OOLUA_CONSTRUCTOR_PARAM_IS_OF_TYPE_5 OOLUA_CONSTRUCTOR_PARAM_IS_OF_TYPE_4 && OOLUA_CONSTRUCTOR_PARAM_IS_OF_TYPE_NUM(5)

#define VA_PARAM_TYPES_NUM(NUM, ...) , INTERNAL::param_type< TYPELIST::At_default< Type_list<__VA_ARGS__ >::type, NUM-1>::Result  >
#define VA_1(...) VA_PARAM_TYPES_NUM(1, __VA_ARGS__)
#define VA_2(...) VA_1(__VA_ARGS__) VA_PARAM_TYPES_NUM(2, __VA_ARGS__)
#define VA_3(...) VA_2(__VA_ARGS__) VA_PARAM_TYPES_NUM(3, __VA_ARGS__)
#define VA_4(...) VA_3(__VA_ARGS__) VA_PARAM_TYPES_NUM(4, __VA_ARGS__)
#define VA_5(...) VA_4(__VA_ARGS__) VA_PARAM_TYPES_NUM(5, __VA_ARGS__)

#define OOLUA_FCALL_PARAM_NUM(NUM) , P##NUM p##NUM
#define OOLUA_FCALL_PARAM_0
#define OOLUA_FCALL_PARAM_1 OOLUA_FCALL_PARAM_NUM(1)
#define OOLUA_FCALL_PARAM_2 OOLUA_FCALL_PARAM_1  OOLUA_FCALL_PARAM_NUM(2)
#define OOLUA_FCALL_PARAM_3 OOLUA_FCALL_PARAM_2  OOLUA_FCALL_PARAM_NUM(3)
#define OOLUA_FCALL_PARAM_4 OOLUA_FCALL_PARAM_3  OOLUA_FCALL_PARAM_NUM(4)
#define OOLUA_FCALL_PARAM_5 OOLUA_FCALL_PARAM_4  OOLUA_FCALL_PARAM_NUM(5)
#define OOLUA_FCALL_PARAM_6 OOLUA_FCALL_PARAM_5  OOLUA_FCALL_PARAM_NUM(6)
#define OOLUA_FCALL_PARAM_7 OOLUA_FCALL_PARAM_6  OOLUA_FCALL_PARAM_NUM(7)
#define OOLUA_FCALL_PARAM_8 OOLUA_FCALL_PARAM_7  OOLUA_FCALL_PARAM_NUM(8)
#define OOLUA_FCALL_PARAM_9 OOLUA_FCALL_PARAM_8  OOLUA_FCALL_PARAM_NUM(9)
#define OOLUA_FCALL_PARAM_10 OOLUA_FCALL_PARAM_9  OOLUA_FCALL_PARAM_NUM(10)

#define OOLUA_FCALL_PUSH_NUM(NUM) && push(m_lua, p##NUM)
#define OOLUA_FCALL_PUSH_0
#define OOLUA_FCALL_PUSH_1 OOLUA_FCALL_PUSH_NUM(1)
#define OOLUA_FCALL_PUSH_2 OOLUA_FCALL_PUSH_1  OOLUA_FCALL_PUSH_NUM(2)
#define OOLUA_FCALL_PUSH_3 OOLUA_FCALL_PUSH_2  OOLUA_FCALL_PUSH_NUM(3)
#define OOLUA_FCALL_PUSH_4 OOLUA_FCALL_PUSH_3  OOLUA_FCALL_PUSH_NUM(4)
#define OOLUA_FCALL_PUSH_5 OOLUA_FCALL_PUSH_4  OOLUA_FCALL_PUSH_NUM(5)
#define OOLUA_FCALL_PUSH_6 OOLUA_FCALL_PUSH_5  OOLUA_FCALL_PUSH_NUM(6)
#define OOLUA_FCALL_PUSH_7 OOLUA_FCALL_PUSH_6  OOLUA_FCALL_PUSH_NUM(7)
#define OOLUA_FCALL_PUSH_8 OOLUA_FCALL_PUSH_7  OOLUA_FCALL_PUSH_NUM(8)
#define OOLUA_FCALL_PUSH_9 OOLUA_FCALL_PUSH_8  OOLUA_FCALL_PUSH_NUM(9)
#define OOLUA_FCALL_PUSH_10 OOLUA_FCALL_PUSH_9  OOLUA_FCALL_PUSH_NUM(10)

#define OOLUA_INTERNAL_CONSTRUCTORS_GEN OOLUA_CONSTRUCTOR_GENERATE_NUM(1) OOLUA_CONSTRUCTOR_GENERATE_NUM(2) \
	OOLUA_CONSTRUCTOR_GENERATE_NUM(3) OOLUA_CONSTRUCTOR_GENERATE_NUM(4) OOLUA_CONSTRUCTOR_GENERATE_NUM(5)
#define OOLUA_INTERNAL_FUNC_OPERATORS\
	OOLUA_INTERNAL_FUNC_OPERATOR(0) OOLUA_INTERNAL_FUNC_OPERATOR(1) OOLUA_INTERNAL_FUNC_OPERATOR(2) \
	OOLUA_INTERNAL_FUNC_OPERATOR(3) OOLUA_INTERNAL_FUNC_OPERATOR(4) OOLUA_INTERNAL_FUNC_OPERATOR(5) \
	OOLUA_INTERNAL_FUNC_OPERATOR(6) OOLUA_INTERNAL_FUNC_OPERATOR(7) OOLUA_INTERNAL_FUNC_OPERATOR(8) \
	OOLUA_INTERNAL_FUNC_OPERATOR(9) OOLUA_INTERNAL_FUNC_OPERATOR(10)
#define OOLUA_INTERNAL_C_CALLER_NO_RETURN_FUNCS\
	OOLUA_INTERNAL_C_CALLER_NO_RETURN_NUM(0) OOLUA_INTERNAL_C_CALLER_NO_RETURN_NUM(1) OOLUA_INTERNAL_C_CALLER_NO_RETURN_NUM(2) \
	OOLUA_INTERNAL_C_CALLER_NO_RETURN_NUM(3) OOLUA_INTERNAL_C_CALLER_NO_RETURN_NUM(4) OOLUA_INTERNAL_C_CALLER_NO_RETURN_NUM(5) \
	OOLUA_INTERNAL_C_CALLER_NO_RETURN_NUM(6) OOLUA_INTERNAL_C_CALLER_NO_RETURN_NUM(7) OOLUA_INTERNAL_C_CALLER_NO_RETURN_NUM(8)
#define OOLUA_INTERNAL_C_CALLER_FUNCS\
	OOLUA_INTERNAL_C_CALLER_NUM(0) OOLUA_INTERNAL_C_CALLER_NUM(1) OOLUA_INTERNAL_C_CALLER_NUM(2) \
	OOLUA_INTERNAL_C_CALLER_NUM(3) OOLUA_INTERNAL_C_CALLER_NUM(4) OOLUA_INTERNAL_C_CALLER_NUM(5) \
	OOLUA_INTERNAL_C_CALLER_NUM(6) OOLUA_INTERNAL_C_CALLER_NUM(7) OOLUA_INTERNAL_C_CALLER_NUM(8)
#define OOLUA_INTERNAL_MEMBER_CALLER_NO_RETURN_FUNCS\
	OOLUA_INTERNAL_MEMBER_CALLER_NO_RETURN_NUM(0) OOLUA_INTERNAL_MEMBER_CALLER_NO_RETURN_NUM(1) OOLUA_INTERNAL_MEMBER_CALLER_NO_RETURN_NUM(2) \
	OOLUA_INTERNAL_MEMBER_CALLER_NO_RETURN_NUM(3) OOLUA_INTERNAL_MEMBER_CALLER_NO_RETURN_NUM(4) OOLUA_INTERNAL_MEMBER_CALLER_NO_RETURN_NUM(5) \
	OOLUA_INTERNAL_MEMBER_CALLER_NO_RETURN_NUM(6) OOLUA_INTERNAL_MEMBER_CALLER_NO_RETURN_NUM(7) OOLUA_INTERNAL_MEMBER_CALLER_NO_RETURN_NUM(8)
#define OOLUA_INTERNAL_MEMBER_CALLER_FUNCS\
	OOLUA_INTERNAL_MEMBER_CALLER_NUM(0) OOLUA_INTERNAL_MEMBER_CALLER_NUM(1) OOLUA_INTERNAL_MEMBER_CALLER_NUM(2) \
	OOLUA_INTERNAL_MEMBER_CALLER_NUM(3) OOLUA_INTERNAL_MEMBER_CALLER_NUM(4) OOLUA_INTERNAL_MEMBER_CALLER_NUM(5) \
	OOLUA_INTERNAL_MEMBER_CALLER_NUM(6) OOLUA_INTERNAL_MEMBER_CALLER_NUM(7) OOLUA_INTERNAL_MEMBER_CALLER_NUM(8)
#define OOLUA_GENERATE_DEFAULT_TRAIT_CALLERS\
	OOLUA_GENERATE_DEFAULT_TRAIT_CALLER(0) OOLUA_GENERATE_DEFAULT_TRAIT_CALLER(1) OOLUA_GENERATE_DEFAULT_TRAIT_CALLER(2) \
	OOLUA_GENERATE_DEFAULT_TRAIT_CALLER(3) OOLUA_GENERATE_DEFAULT_TRAIT_CALLER(4) OOLUA_GENERATE_DEFAULT_TRAIT_CALLER(5) \
	OOLUA_GENERATE_DEFAULT_TRAIT_CALLER(6) OOLUA_GENERATE_DEFAULT_TRAIT_CALLER(7) OOLUA_GENERATE_DEFAULT_TRAIT_CALLER(8)
/** \endcond */
#endif
